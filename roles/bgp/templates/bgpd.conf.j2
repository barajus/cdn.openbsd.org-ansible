AS 15562
router-id {{ ansible_default_ipv4['address'] }}

listen on 0.0.0.0
listen on ::

{% for net in bgp_networks|default([]) %}
network {{ net }}
{% endfor %}

{% for neighbor in atr_bgp['neighbors'] %}
neighbor {{ neighbor['ip'] }} {
{% if neighbor['multihop']|default(0) > 0 %}
	multihop {{ neighbor['multihop'] }}
{% endif %}
	remote-as {{ neighbor['asn'] }}
	announce self
	announce restart no
{% if neighbor['routeserver']|default(False) %}
	enforce neighbor-as no
{% endif %}
{% if neighbor['source_ip']|default(False) %}
	local-address {{ neighbor['source_ip'] }}
{% endif %}
}
{% endfor %}

deny from any
{% if testing|default(False) %}
deny quick to any
{% endif %}

{# since coloclue isnt a global network, dont announce to global peers #}
{% if atr_bgp['upstream'] == "coloclue" %}
match to any set { \
    large-community 8283:4:3356 \
    large-community 8283:4:1299 \
    large-community 8283:4:6453 \
    large-community 8283:4:6939 \
}
{% elif atr_bgp['upstream'] == "ntt" %}
match to any set { \
    community 65520:2201 \
}
{% elif atr_bgp['upstream'] == "nordunet" %}
match to any set { \
    community 2603:63809 \
    community 2603:63810 \
    community 2603:63854 \
    community 2603:63811 \
    community 2603:63812 \
    community 2603:63808 \
}
{% endif %}

{% for neighbor in atr_bgp['neighbors'] %}
{% if neighbor['accept_routes']|default(False) %}
allow from {{ neighbor['ip'] }}
{% endif %}
{% endfor %}
