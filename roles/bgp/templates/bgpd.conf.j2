AS 15562
router-id {{ atr_bgp['router_id'] }}

listen on 0.0.0.0
listen on ::

{% for net in bgp_networks|default([]) %}
network {{ net }} set large-community 15562:1:1
{% endfor %}

prefix-set atr-prefixes { {% for net in bgp_networks|default([]) -%}
{{ net }}{{ " " }}{%- endfor -%}
}

{% for neighbor in atr_bgp['neighbors'] %}
neighbor {{ neighbor['ip'] }} {
{% if neighbor['multihop']|default(0) > 0 %}
	multihop {{ neighbor['multihop'] }}
{% endif %}
	remote-as {{ neighbor['asn'] }}
{% if ansible_distribution_version != "6.4" %}
	announce all
{% endif %}
	announce restart no
{% if neighbor['routeserver']|default(False) %}
	enforce neighbor-as no
{% endif %}
{% if neighbor['source_ip']|default(False) %}
	local-address {{ neighbor['source_ip'] }}
{% endif %}
}
{% endfor %}

deny from any
deny to any
{% if testing|default(False) %}
deny quick to any
{% endif %}

allow to ibgp large-community 15562:1:1 prefix-set atr-prefixes
allow to ebgp large-community 15562:1:1 prefix-set atr-prefixes

{# since coloclue isnt a global network, dont announce to global peers #}
{% if atr_bgp['upstream'] == "coloclue" %}
match to any set { \
    large-community 8283:4:3356 \
    large-community 8283:4:1299 \
    large-community 8283:4:6453 \
    large-community 8283:4:6939 \
}
{% elif atr_bgp['upstream'] == "ntt" %}
match to any set { \
    community 65520:2201 \
}
{% elif atr_bgp['upstream'] == "nordunet" %}
match to any set { \
    community 2603:63809 \
    community 2603:63810 \
    community 2603:63854 \
    community 2603:63811 \
    community 2603:63812 \
    community 2603:63808 \
}
{% endif %}

{% for neighbor in atr_bgp['neighbors'] %}
{% if neighbor['accept_routes']|default(False) %}
allow from {{ neighbor['ip'] }}
{% endif %}
{% endfor %}
